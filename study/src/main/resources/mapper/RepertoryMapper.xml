<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pan.mapper.RepertoryMapper">
	<resultMap id="BaseResultMap" type="com.pan.entity.Repertory">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="specification" jdbcType="VARCHAR" property="specification" />
		<result column="unit" jdbcType="VARCHAR" property="unit" />
		<result column="quantity" jdbcType="INTEGER" property="quantity" />
		<result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
		<result column="amount" jdbcType="DECIMAL" property="amount" />
		<result column="tax" jdbcType="DECIMAL" property="tax" />
		<result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
		<result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	</resultMap>

	<sql id="Base_Column_List">
		id, specification, unit, quantity, unit_price, amount, tax, total_amount,
		create_user_id,
		create_time
	</sql>

	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_repertory
		where id = #{id,jdbcType=BIGINT}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from t_repertory
		where id = #{id,jdbcType=BIGINT}
	</delete>

	<insert id="insertSelective" parameterType="com.pan.entity.Repertory">
		insert into t_repertory
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="specification != null">
				specification,
			</if>
			<if test="unit != null">
				unit,
			</if>
			<if test="quantity != null">
				quantity,
			</if>
			<if test="unitPrice != null">
				unit_price,
			</if>
			<if test="amount != null">
				amount,
			</if>
			<if test="tax != null">
				tax,
			</if>
			<if test="totalAmount != null">
				total_amount,
			</if>
			<if test="createUserId != null">
				create_user_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="specification != null">
				#{specification,jdbcType=VARCHAR},
			</if>
			<if test="unit != null">
				#{unit,jdbcType=VARCHAR},
			</if>
			<if test="quantity != null">
				#{quantity,jdbcType=INTEGER},
			</if>
			<if test="unitPrice != null">
				#{unitPrice,jdbcType=DECIMAL},
			</if>
			<if test="amount != null">
				#{amount,jdbcType=DECIMAL},
			</if>
			<if test="tax != null">
				#{tax,jdbcType=DECIMAL},
			</if>
			<if test="totalAmount != null">
				#{totalAmount,jdbcType=DECIMAL},
			</if>
			<if test="createUserId != null">
				#{createUserId,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.pan.entity.Repertory">
		update t_repertory
		<set>
			<if test="specification != null">
				specification = #{specification,jdbcType=VARCHAR},
			</if>
			<if test="unit != null">
				unit = #{unit,jdbcType=VARCHAR},
			</if>
			<if test="quantity != null">
				quantity = #{quantity,jdbcType=INTEGER},
			</if>
			<if test="unitPrice != null">
				unit_price = #{unitPrice,jdbcType=DECIMAL},
			</if>
			<if test="amount != null">
				amount = #{amount,jdbcType=DECIMAL},
			</if>
			<if test="tax != null">
				tax = #{tax,jdbcType=DECIMAL},
			</if>
			<if test="totalAmount != null">
				total_amount = #{totalAmount,jdbcType=DECIMAL},
			</if>
			<if test="createUserId != null">
				create_user_id = #{createUserId,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select id="findPageable" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_repertory
		<include refid="whereSql" />
		<choose>
			<when test="orderCondition !=null and orderCondition !=''">
				order by ${orderCondition}
			</when>
			<otherwise>
				order by create_time asc
			</otherwise>
		</choose>
		<if test="offset!=null and row !=null">
			limit #{offset},#{row}
		</if>
	</select>

	<select id="countByParams" resultType="int">
		select count(0) from t_repertory
		<include refid="whereSql" />
	</select>
	
	<sql id="whereSql">
		<where>
		</where>
	</sql>
</mapper>