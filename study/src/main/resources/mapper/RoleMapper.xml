<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pan.mapper.RoleMapper">

	<resultMap id="BaseResultMap" type="com.pan.entity.Role">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="role_name" jdbcType="VARCHAR" property="roleName" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
		<result column="super_admin_flag" jdbcType="INTEGER" property="superAdminFlag" />
	</resultMap>

	<sql id="Base_Column_List">
		id,role_name, create_time, create_user_id, update_time,
		update_user_id, super_admin_flag
	</sql>
	
   <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_role
    where id = #{id,jdbcType=BIGINT}
  </select>
	
	<select id="findPageable" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_role
		<include refid="whereSql"/>
		order by create_time asc
		<if test="offset!=null and row !=null">
			limit #{offset},#{row}
		</if>
	</select>

	<select id="countByParams" resultType="int">
		select count(0) from t_role
		<include refid="whereSql"/>
	</select>
	
	<sql id="whereSql">
		<where>
			<if test="roleName !=null">
				and role_name like CONCAT('%',#{roleName},'%')
			</if>
			<if test="superAdminFlag !=null">
				and super_admin_flag=#{superAdminFlag,jdbcType=INTEGER}
			</if>
		</where>
	</sql>
	
	<insert id="insertSelective" parameterType="com.pan.entity.Role">
		insert into t_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="roleName != null">
				role_name,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createUserId != null">
				create_user_id,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="updateUserId != null">
				update_user_id,
			</if>
			<if test="superAdminFlag != null">
				super_admin_flag,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUserId != null">
				#{createUserId,jdbcType=BIGINT},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUserId != null">
				#{updateUserId,jdbcType=BIGINT},
			</if>
			<if test="superAdminFlag != null">
				#{superAdminFlag,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from t_role
		where id = #{id,jdbcType=BIGINT}
	</delete>

	<select id="getRoleSelectedByUserId" resultMap="BaseResultMap">		
		select tr.id,tr.role_name,max(ifnull(u.user_id,0))marker from t_role tr 
		left join t_user_role tur on tur.role_id=tr.id 
		left join (select id as user_id from t_user where id =#{userId}) u on u.user_id=tur.user_id 
		group by tr.id 
	</select>

	<select id="getRoleIdsByUserId" resultType="Long">
		select id from t_user_role where user_id=#{userId}
	</select>

	<update id="updateByPrimaryKeySelective" parameterType="com.pan.entity.Role">
		update t_role
		<set>
			<if test="roleName != null">
				role_name = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUserId != null">
				create_user_id = #{createUserId,jdbcType=BIGINT},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUserId != null">
				update_user_id = #{updateUserId,jdbcType=BIGINT},
			</if>
			<if test="superAdminFlag != null">
				super_admin_flag = #{superAdminFlag,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	
	<select id="findByRoleIds" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_role where id in
		<foreach collection="array" item="roleId" open="(" close=")" separator=",">
			#{roleId}
		</foreach>
	</select>
</mapper>